{"version":3,"sources":["actions/books.js","actions/cart.js","components/BookCard.jsx","containers/BookCard.js","actions/filter.js","components/Filter.jsx","containers/Filter.js","components/Menu.jsx","containers/Menu.js","components/App.jsx","containers/App.js","reducers/books-reducer.js","reducers/cart-reducer.js","reducers/filter-reducer.js","reducers/index.js","index.js","store.js"],"names":["setBooks","books","type","payload","addToCart","obj","removeFromCart","id","BookCard","book","title","author","price","image","addedCount","Card","Image","src","Content","Header","Meta","className","extra","href","Icon","name","Button","onClick","bind","connect","cart","items","reduce","count","dispatch","bindActionCreators","cartActions","setFilter","filter","setSearchQuery","value","Filter","filterBy","searchQuery","Menu","secondary","Item","active","Input","onChange","e","target","icon","placeholder","filterActions","CartComponent","List","selection","divided","verticalAlign","floated","color","avatar","activeItem","MenuComponent","totalPrice","window","location","reload","position","Popup","trigger","content","map","i","key","on","hideOnScroll","total","length","uniqBy","o","App","this","props","axios","get","then","data","isReady","Container","Group","itemsPerRow","Component","searchBooks","orderBy","sortBy","toLowerCase","indexOf","filterBooks","booksActions","initialState","combineReducers","state","action","store","createStore","rootReducer","applyMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.250c8ea1.chunk.js","sourcesContent":["export const setBooks = books => ({\n  type: \"SET_BOOKS\",\n  payload: books\n});\n","export const addToCart = obj => ({\n  type: \"ADD_TO_CART\",\n  payload: obj\n});\n\nexport const removeFromCart = id => ({\n  type: \"REMOVE_FROM_CART\",\n  payload: id\n});\n","import React from \"react\";\nimport { Card, Image, Icon, Button } from \"semantic-ui-react\";\nimport \"./Card.css\";\n\nconst BookCard = book => {\n  const { title, author, price, image, addToCart, addedCount } = book;\n  return (\n    <Card>\n      <Image src={image} />\n\n      <Card.Content>\n        <Card.Header>{title}</Card.Header>\n        <Card.Meta>\n          <span className=\"date\">{author}</span>\n        </Card.Meta>\n      </Card.Content>\n      <Card.Content extra>\n        <a href=\"true\">\n          <Icon name=\"usd\" />\n          {price}\n        </a>\n      </Card.Content>\n      <Button onClick={addToCart.bind(this, book)}>\n        Add to Cart {addedCount > 0 && `(${addedCount})`}\n      </Button>\n    </Card>\n  );\n};\n\nexport default BookCard;\n","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as cartActions from \"../actions/cart\";\nimport BookCard from \"../components/BookCard\";\n\nconst mapStateToProps = ({ cart }, { id }) => ({\n  addedCount: cart.items.reduce(\n    (count, book) => count + (book.id === id ? 1 : 0),\n    0\n  )\n});\n\nconst mapDispatchToProps = dispatch => ({\n  ...bindActionCreators(cartActions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookCard);\n","export const setFilter = filter => ({\n  type: \"SET_FILTER\",\n  payload: filter\n});\n\nexport const setSearchQuery = value => ({\n  type: \"SET_QUERY\",\n  payload: value\n});\n","import React from \"react\";\nimport { Menu, Input } from \"semantic-ui-react\";\n\nconst Filter = ({ setFilter, filterBy, searchQuery, setSearchQuery }) => (\n  <Menu secondary>\n    <Menu.Item\n      active={filterBy === \"all\"}\n      onClick={setFilter.bind(this, \"all\")}\n    >\n      All\n    </Menu.Item>\n    <Menu.Item\n      active={filterBy === \"price_high\"}\n      onClick={setFilter.bind(this, \"price_high\")}\n    >\n      Price (high)\n    </Menu.Item>\n    <Menu.Item\n      active={filterBy === \"price_low\"}\n      onClick={setFilter.bind(this, \"price_low\")}\n    >\n      Price (low)\n    </Menu.Item>\n    <Menu.Item\n      active={filterBy === \"author\"}\n      onClick={setFilter.bind(this, \"author\")}\n    >\n      Author\n    </Menu.Item>\n    <Menu.Item>\n      <Input\n        onChange={e => setSearchQuery(e.target.value)}\n        icon=\"search\"\n        value={searchQuery}\n        placeholder=\"Enter query..\"\n      />\n    </Menu.Item>\n  </Menu>\n);\n\nexport default Filter;\n","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as filterActions from \"../actions/filter\";\nimport Filter from \"../components/Filter\";\n\nconst mapStateToProps = ({ books, filter }) => ({\n  filterBy: filter.filterBy\n});\n\nconst mapDispatchToProps = dispatch => ({\n  ...bindActionCreators(filterActions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport { Menu, Popup, List, Button, Image } from \"semantic-ui-react\";\n\nconst CartComponent = ({ title, id, image, removeFromCart }) => (\n  <List selection divided verticalAlign=\"middle\">\n    <List.Item>\n      <List.Content floated=\"right\">\n        <Button onClick={removeFromCart.bind(this, id)} color=\"red\">\n          Remove\n        </Button>\n      </List.Content>\n      <Image avatar src={image} />\n      <List.Content>{title}</List.Content>\n    </List.Item>\n  </List>\n);\n\nlet state = {}\nconst { activeItem } = state;\n\nconst MenuComponent = ({ totalPrice, count, items }) => (\n  <Menu>\n    <Menu.Item\n      name=\"browse\"\n      active={activeItem === 'browse'}\n      onClick={() => window.location.reload(false)}\n    >\n      Web Development Book Store\n    </Menu.Item>\n\n    <Menu.Menu position=\"right\">\n      <Menu.Item\n        name=\"signup\"\n        //onClick={this.handleItemClick}\n      >\n        Total: &nbsp; <b>{totalPrice}</b>&nbsp; USD\n      </Menu.Item>\n\n      <Popup\n        trigger={\n          <Menu.Item\n            name=\"help\"\n            //onClick={this.handleItemClick}\n          >\n            Cart (<b>{count}</b>)\n          </Menu.Item>\n        }\n        content={\n          count === 0\n            ? \"cart is empty\"\n            : items.map((book, i) => <CartComponent {...book} key={i} />)\n        }\n        on=\"click\"\n        hideOnScroll\n      />\n    </Menu.Menu>\n  </Menu>\n);\n\nexport default MenuComponent;\n","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as cartActions from \"../actions/cart\";\nimport Menu from \"../components/Menu\";\nimport uniqBy from \"lodash/uniqBy\";\n\nconst mapStateToProps = ({ cart }) => ({\n  totalPrice: cart.items.reduce((total, book) => total + book.price, 0),\n  count: cart.items.length,\n  items: uniqBy(cart.items, o => o.id)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  ...bindActionCreators(cartActions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Card } from \"semantic-ui-react\";\n\nimport BookCard from \"../containers/BookCard\";\nimport Filter from \"../containers/Filter\";\nimport Menu from \"../containers/Menu\";\n\nclass App extends Component {\n  componentDidMount() {\n    const { setBooks } = this.props;\n    axios.get(\"/books.json\").then(({ data }) => {\n      setBooks(data);\n    });\n  }\n\n  render() {\n    const { books, isReady } = this.props;\n    return (\n      <Container>\n        <Menu />\n        <Filter />\n        <Card.Group itemsPerRow={4}>\n          {!isReady\n            ? \"Loading...\"\n            : books.map((book, i) => <BookCard key={i} {...book} />)}\n        </Card.Group>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as booksActions from \"../actions/books\";\nimport App from \"../components/App\";\nimport orderBy from \"lodash/orderBy\";\n\nconst sortBy = (books, filterBy) => {\n  switch (filterBy) {\n    case \"price_high\":\n      return orderBy(books, \"price\", \"desc\");\n    case \"price_low\":\n      return orderBy(books, \"price\", \"asc\");\n    case \"author\":\n      return orderBy(books, \"author\", \"asc\");\n    default:\n      return books;\n  }\n};\n\nconst filterBooks = (books, searchQuery) =>\n  books.filter(\n    o =>\n      o.title.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0 ||\n      o.author.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0\n  );\n\nconst searchBooks = (books, filterBy, searchQuery) => {\n  return sortBy(filterBooks(books, searchQuery), filterBy);\n};\n\nconst mapStateToProps = ({ books, filter }) => ({\n  books:\n    books.items &&\n    searchBooks(books.items, filter.filterBy, filter.searchQuery),\n  isReady: books.isReady\n});\n\nconst mapDispatchToProps = dispatch => ({\n  ...bindActionCreators(booksActions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// Reducer\nconst initialState = {\n  isReady: false,\n  items: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_BOOKS\":\n      return {\n        ...state,\n        items: action.payload,\n        isReady: true\n      };\n    case \"SET_IS_READY\":\n      return {\n        ...state,\n        isReady: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  items: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return {\n        ...state,\n        items: [...state.items, action.payload]\n      };\n    case \"REMOVE_FROM_CART\":\n      return {\n        ...state,\n        items: state.items.filter(o => o.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  searchQuery: \"\",\n  filterBy: \"all\"\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_QUERY\":\n      return {\n        ...state,\n        searchQuery: action.payload\n      };\n    case \"SET_FILTER\":\n      return {\n        ...state,\n        filterBy: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport books from \"./books-reducer\";\nimport cart from \"./cart-reducer\";\nimport filter from \"./filter-reducer\";\n\nexport default combineReducers({\n  books,\n  cart,\n  filter\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./app.css\";\n\nimport App from \"./containers/App\";\n\nimport createStore from \"./store\";\n\nconst store = createStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"./reducers\";\n\nexport default () => {\n  const store = createStore(rootReducer, applyMiddleware(logger));\n  return store;\n};\n"],"sourceRoot":""}